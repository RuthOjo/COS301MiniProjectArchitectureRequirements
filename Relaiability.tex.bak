
	\subsubsection*{Description}
		Buzz should be accessible at most times; this should not be limited to the campus network, but every other network must have the same availability. Buzz should also be reliable such that the user's posts or response to threads are not modified maliciously; they should be as they'd posted them. Buzz should also have minimal maintenance down-times.
		
\subsubsection*{Justification}
Although the reliability and available attributes are not so important; without these attributes, problems with system availability could arise. These problems include, but are not limited to: 	
				
\begin{itemize}
\item The reduction of a lecturer's ability to determine the state of the forum or of a particular user for the purposes of the rewarding system.
							
\item The inability of a user to properly communicate with his peers or supervisors.
							
\item The inability of students to ask and answer relevant questions, potentially affecting the marks of the users involved
							
\item General software control and application usage.
\end{itemize}
						 
	A downtime of fewer than 2 hours, twice a month would allow students and forum Administrators to facilitate maximum utilisation of the system.
	External access to the system would prove very useful to many students as they would be able to, in the case of illness or other absence, still communicate with their peers in a particular class and gain a modicum of understanding regarding the scope of the missed work or important announcements.
	A high reliability rate is recommended to ensure that users do not encounter errors and/or data corruption in their day to day use. A rate of more than one error per day would be completely unacceptable.
	
	
\subsubsection*{Mechanism}	
		\begin{enumerate}
			\item Strategy:
\begin{itemize}
\item Clustering: using more resources by running many instances of the application over a cluster of servers or instances; therefore if a server should fail, the reliability and availability of the system will not be compromised.
\item Ensuring that the sending and receiving of user data is well structured, such that when a message is sent, it is received by the intended recipient in good time.		 	 
\item In cases related to reading and writing from the database we would recommend that parallel updates be avoided and a single object used to stream all database modifications effectively, reducing data redundancy an inaccuracy.		 
\item Use of more resources: The use of 2 servers connected to the Internet would make external access possible. This would also heavily reduce downtime, as a temporary server can be run while the other is maintained. We would recommend the use of a proxy design pattern, perhaps using redirect functionality provided by the strategy pattern to facilitate switching between servers or to hold pending data should users try to post while the database is down.
\end{itemize}
			
			
\item Architectural Pattern(s):
\begin{itemize}
\item Blackboard
	\begin{itemize}
	\item this pattern allows for distributed problem-solving and because of it's distributed nature separation of concerns is enforced, thus the failure of one does not mean failure for the rest of the system components.
	\end{itemize}	
\end{itemize}

\begin{itemize}
\item Hierarchical
	\begin{itemize}
	\item by implementing a hierarchical architecture, separation of concerns can be enforced such those elements that would be prone to failure can be placed at a lower-level in the hierarchy, ensuring that if any of such elements should fail, the entire system will not collapse.
	\end{itemize}	
\end{itemize}
			
\end{enumerate}
